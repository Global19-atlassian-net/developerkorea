[[[{"기":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"술":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"블":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"애":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"저":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"를":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"이":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"용":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"해":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"파":["6b0b1e85-1d99-4804-b451-4302589116b8"]},{"로":["921bb6d6-a242-4997-9718-7a6cb5e10d6d","3653362a-ef7d-41b2-8914-7e8295aaefd6"],"그":["921bb6d6-a242-4997-9718-7a6cb5e10d6d","3653362a-ef7d-41b2-8914-7e8295aaefd6"],"를":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"시":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"벤":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"트":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"리":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"드":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"구":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"독":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"및":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"직":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"프":["6b0b1e85-1d99-4804-b451-4302589116b8"],"라":["6b0b1e85-1d99-4804-b451-4302589116b8"],"인":["6b0b1e85-1d99-4804-b451-4302589116b8"],"을":["6b0b1e85-1d99-4804-b451-4302589116b8"],"팩":["6b0b1e85-1d99-4804-b451-4302589116b8"],"토":["6b0b1e85-1d99-4804-b451-4302589116b8"]},{"작":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"합":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"니":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"다":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"앱":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"핸":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"들":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"러":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"프":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"비":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"닝":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"링":["6b0b1e85-1d99-4804-b451-4302589116b8"],"하":["6b0b1e85-1d99-4804-b451-4302589116b8"],"는":["6b0b1e85-1d99-4804-b451-4302589116b8"],"가":["6b0b1e85-1d99-4804-b451-4302589116b8"],"지":["6b0b1e85-1d99-4804-b451-4302589116b8"],"방":["6b0b1e85-1d99-4804-b451-4302589116b8"]},{"하":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"기":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"법":["6b0b1e85-1d99-4804-b451-4302589116b8"]},{},{},{},{},{}],{},["@921bb6d6-a242-4997-9718-7a6cb5e10d6d","@3653362a-ef7d-41b2-8914-7e8295aaefd6","@6b0b1e85-1d99-4804-b451-4302589116b8"]],[[{"안":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"녕":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"하":["921bb6d6-a242-4997-9718-7a6cb5e10d6d","3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"세":["921bb6d6-a242-4997-9718-7a6cb5e10d6d","3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"요":["921bb6d6-a242-4997-9718-7a6cb5e10d6d","3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"년":["921bb6d6-a242-4997-9718-7a6cb5e10d6d","3653362a-ef7d-41b2-8914-7e8295aaefd6"],"한":["921bb6d6-a242-4997-9718-7a6cb5e10d6d","3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"국":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"마":["921bb6d6-a242-4997-9718-7a6cb5e10d6d","6b0b1e85-1d99-4804-b451-4302589116b8"],"이":["921bb6d6-a242-4997-9718-7a6cb5e10d6d","3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"크":["921bb6d6-a242-4997-9718-7a6cb5e10d6d","3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"로":["921bb6d6-a242-4997-9718-7a6cb5e10d6d","3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"소":["921bb6d6-a242-4997-9718-7a6cb5e10d6d","3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"프":["921bb6d6-a242-4997-9718-7a6cb5e10d6d","3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"트":["921bb6d6-a242-4997-9718-7a6cb5e10d6d","3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"에":["921bb6d6-a242-4997-9718-7a6cb5e10d6d","3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"서":["921bb6d6-a242-4997-9718-7a6cb5e10d6d","3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"새":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"롭":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"애":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"저":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"벤":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"그":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"리":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"드":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"라":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"는":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"비":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"스":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"를":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"용":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"면":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"다":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"양":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"형":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"태":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"의":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"기":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"반":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"아":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"키":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"텍":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"처":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"구":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"성":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"할":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"수":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"있":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"습":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"니":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"특":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"히":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"존":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"재":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"플":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"케":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"션":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"간":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"메":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"시":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"지":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"전":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"송":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"데":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"어":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"꽤":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"유":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"게":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"쓰":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"때":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"중":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"역":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"을":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"가":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"래":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"와":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"같":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"생":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"자":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"퍼":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"블":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"셔":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"발":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"근":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"원":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"입":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"만":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"킬":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"무":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"엇":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"든":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"될":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"죠":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"림":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"은":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"난":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"오":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"픈":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"인":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"즈":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"표":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"했":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"던":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"클":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"우":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"내":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"일":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"부":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"캡":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"쳐":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"것":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"베":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"파":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"장":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"치":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"대":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"해":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"묘":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"사":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"합":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"독":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"섭":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"버":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"핸":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"들":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"러":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"보":["6b0b1e85-1d99-4804-b451-4302589116b8"],"통":["6b0b1e85-1d99-4804-b451-4302589116b8"],"복":["6b0b1e85-1d99-4804-b451-4302589116b8"],"적":["6b0b1e85-1d99-4804-b451-4302589116b8"],"작":["6b0b1e85-1d99-4804-b451-4302589116b8"],"업":["6b0b1e85-1d99-4804-b451-4302589116b8"],"많":["6b0b1e85-1d99-4804-b451-4302589116b8"],"준":["6b0b1e85-1d99-4804-b451-4302589116b8"],"도":["6b0b1e85-1d99-4804-b451-4302589116b8"],"고":["6b0b1e85-1d99-4804-b451-4302589116b8"],"테":["6b0b1e85-1d99-4804-b451-4302589116b8"],"코":["6b0b1e85-1d99-4804-b451-4302589116b8"],"딩":["6b0b1e85-1d99-4804-b451-4302589116b8"],"분":["6b0b1e85-1d99-4804-b451-4302589116b8"],"팩":["6b0b1e85-1d99-4804-b451-4302589116b8"],"토":["6b0b1e85-1d99-4804-b451-4302589116b8"],"링":["6b0b1e85-1d99-4804-b451-4302589116b8"],"없":["6b0b1e85-1d99-4804-b451-4302589116b8"],"까":["6b0b1e85-1d99-4804-b451-4302589116b8"],"물":["6b0b1e85-1d99-4804-b451-4302589116b8"],"론":["6b0b1e85-1d99-4804-b451-4302589116b8"],"포":["6b0b1e85-1d99-4804-b451-4302589116b8"],"최":["6b0b1e85-1d99-4804-b451-4302589116b8"],"여":["6b0b1e85-1d99-4804-b451-4302589116b8"],"섯":["6b0b1e85-1d99-4804-b451-4302589116b8"],"군":["6b0b1e85-1d99-4804-b451-4302589116b8"],"정":["6b0b1e85-1d99-4804-b451-4302589116b8"],"식":["6b0b1e85-1d99-4804-b451-4302589116b8"],"템":["6b0b1e85-1d99-4804-b451-4302589116b8"],"릿":["6b0b1e85-1d99-4804-b451-4302589116b8"],"으":["6b0b1e85-1d99-4804-b451-4302589116b8"],"나":["6b0b1e85-1d99-4804-b451-4302589116b8"],"타":["6b0b1e85-1d99-4804-b451-4302589116b8"],"방":["6b0b1e85-1d99-4804-b451-4302589116b8"],"법":["6b0b1e85-1d99-4804-b451-4302589116b8"],"알":["6b0b1e85-1d99-4804-b451-4302589116b8"],"겠":["6b0b1e85-1d99-4804-b451-4302589116b8"],"예":["6b0b1e85-1d99-4804-b451-4302589116b8"],"제":["6b0b1e85-1d99-4804-b451-4302589116b8"],"확":["6b0b1e85-1d99-4804-b451-4302589116b8"],"빌":["6b0b1e85-1d99-4804-b451-4302589116b8"],"선":["6b0b1e85-1d99-4804-b451-4302589116b8"],"번":["6b0b1e85-1d99-4804-b451-4302589116b8"],"냥":["6b0b1e85-1d99-4804-b451-4302589116b8"],"변":["6b0b1e85-1d99-4804-b451-4302589116b8"],"값":["6b0b1e85-1d99-4804-b451-4302589116b8"],"출":["6b0b1e85-1d99-4804-b451-4302589116b8"],"력":["6b0b1e85-1d99-4804-b451-4302589116b8"],"실":["6b0b1e85-1d99-4804-b451-4302589116b8"],"행":["6b0b1e85-1d99-4804-b451-4302589116b8"],"결":["6b0b1e85-1d99-4804-b451-4302589116b8"],"과":["6b0b1e85-1d99-4804-b451-4302589116b8"],"옵":["6b0b1e85-1d99-4804-b451-4302589116b8"],"차":["6b0b1e85-1d99-4804-b451-4302589116b8"],"례":["6b0b1e85-1d99-4804-b451-4302589116b8"],"곳":["6b0b1e85-1d99-4804-b451-4302589116b8"],"능":["6b0b1e85-1d99-4804-b451-4302589116b8"],"른":["6b0b1e85-1d99-4804-b451-4302589116b8"],"막":["6b0b1e85-1d99-4804-b451-4302589116b8"],"경":["6b0b1e85-1d99-4804-b451-4302589116b8"],"순":["6b0b1e85-1d99-4804-b451-4302589116b8"],"런":["6b0b1e85-1d99-4804-b451-4302589116b8"],"임":["6b0b1e85-1d99-4804-b451-4302589116b8"],"설":["6b0b1e85-1d99-4804-b451-4302589116b8"],"패":["6b0b1e85-1d99-4804-b451-4302589116b8"],"티":["6b0b1e85-1d99-4804-b451-4302589116b8"],"항":["6b0b1e85-1d99-4804-b451-4302589116b8"],"목":["6b0b1e85-1d99-4804-b451-4302589116b8"],"외":["6b0b1e85-1d99-4804-b451-4302589116b8"],"거":["6b0b1e85-1d99-4804-b451-4302589116b8"],"진":["6b0b1e85-1d99-4804-b451-4302589116b8"],"되":["6b0b1e85-1d99-4804-b451-4302589116b8"],"렇":["6b0b1e85-1d99-4804-b451-4302589116b8"]},{"게":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"기":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"술":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"블":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"그":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"를":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"선":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"보":["921bb6d6-a242-4997-9718-7a6cb5e10d6d","3653362a-ef7d-41b2-8914-7e8295aaefd6"],"입":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"니":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"다":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"의":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"클":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"라":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"우":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"드":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"비":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"스":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"삼":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"대":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"축":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"을":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"루":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"는":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"리":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"고":["921bb6d6-a242-4997-9718-7a6cb5e10d6d","3653362a-ef7d-41b2-8914-7e8295aaefd6"],"엄":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"밀":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"말":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"른":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"긴":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"통":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"동":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"당":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"문":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"봐":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"도":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"큰":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"없":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"낸":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"받":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"각":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"화":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"여":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"줍":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"개":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"브":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"커":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"적":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"으":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"직":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"접":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"연":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"결":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"않":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"식":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"진":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"행":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"필":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"바":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"떤":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"좀":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"더":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"알":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"싶":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"영":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"상":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"과":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"료":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"확":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"환":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"경":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"토":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"픽":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"템":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"릿":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"쉽":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"정":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"안":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"타":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"깝":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"신":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"됩":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"추":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"방":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"법":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"실":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"두":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"코":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"권":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"위":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"언":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"급":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"속":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"값":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"주":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"현":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"샘":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"략":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"허":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"되":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"또":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"떄":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"름":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"길":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"흐":["6b0b1e85-1d99-4804-b451-4302589116b8"],"묶":["6b0b1e85-1d99-4804-b451-4302589116b8"],"빼":["6b0b1e85-1d99-4804-b451-4302589116b8"],"놓":["6b0b1e85-1d99-4804-b451-4302589116b8"],"럴":["6b0b1e85-1d99-4804-b451-4302589116b8"],"약":["6b0b1e85-1d99-4804-b451-4302589116b8"],"후":["6b0b1e85-1d99-4804-b451-4302589116b8"],"돌":["6b0b1e85-1d99-4804-b451-4302589116b8"],"난":["6b0b1e85-1d99-4804-b451-4302589116b8"],"므":["6b0b1e85-1d99-4804-b451-4302589116b8"],"별":["6b0b1e85-1d99-4804-b451-4302589116b8"],"합":["6b0b1e85-1d99-4804-b451-4302589116b8"],"뀔":["6b0b1e85-1d99-4804-b451-4302589116b8"],"달":["6b0b1e85-1d99-4804-b451-4302589116b8"],"했":["6b0b1e85-1d99-4804-b451-4302589116b8"],"모":["6b0b1e85-1d99-4804-b451-4302589116b8"],"사":["6b0b1e85-1d99-4804-b451-4302589116b8"],"교":["6b0b1e85-1d99-4804-b451-4302589116b8"],"려":["6b0b1e85-1d99-4804-b451-4302589116b8"],"넘":["6b0b1e85-1d99-4804-b451-4302589116b8"],"겨":["6b0b1e85-1d99-4804-b451-4302589116b8"],"미":["6b0b1e85-1d99-4804-b451-4302589116b8"],"터":["6b0b1e85-1d99-4804-b451-4302589116b8"],"잘":["6b0b1e85-1d99-4804-b451-4302589116b8"],"표":["6b0b1e85-1d99-4804-b451-4302589116b8"],"앞":["6b0b1e85-1d99-4804-b451-4302589116b8"],"봤":["6b0b1e85-1d99-4804-b451-4302589116b8"],"던":["6b0b1e85-1d99-4804-b451-4302589116b8"],"공":["6b0b1e85-1d99-4804-b451-4302589116b8"],"였":["6b0b1e85-1d99-4804-b451-4302589116b8"],"덩":["6b0b1e85-1d99-4804-b451-4302589116b8"],"룹":["6b0b1e85-1d99-4804-b451-4302589116b8"],"종":["6b0b1e85-1d99-4804-b451-4302589116b8"],"류":["6b0b1e85-1d99-4804-b451-4302589116b8"],"져":["6b0b1e85-1d99-4804-b451-4302589116b8"],"갈":["6b0b1e85-1d99-4804-b451-4302589116b8"],"조":["6b0b1e85-1d99-4804-b451-4302589116b8"],"건":["6b0b1e85-1d99-4804-b451-4302589116b8"],"양":["6b0b1e85-1d99-4804-b451-4302589116b8"],"오":["6b0b1e85-1d99-4804-b451-4302589116b8"],"활":["6b0b1e85-1d99-4804-b451-4302589116b8"],"떻":["6b0b1e85-1d99-4804-b451-4302589116b8"],"살":["6b0b1e85-1d99-4804-b451-4302589116b8"],"펴":["6b0b1e85-1d99-4804-b451-4302589116b8"],"켜":["6b0b1e85-1d99-4804-b451-4302589116b8"],"버":["6b0b1e85-1d99-4804-b451-4302589116b8"],"납":["6b0b1e85-1d99-4804-b451-4302589116b8"],"러":["6b0b1e85-1d99-4804-b451-4302589116b8"],"릴":["6b0b1e85-1d99-4804-b451-4302589116b8"],"낼":["6b0b1e85-1d99-4804-b451-4302589116b8"],"핵":["6b0b1e85-1d99-4804-b451-4302589116b8"],"심":["6b0b1e85-1d99-4804-b451-4302589116b8"],"곧":["6b0b1e85-1d99-4804-b451-4302589116b8"],"냅":["6b0b1e85-1d99-4804-b451-4302589116b8"],"온":["6b0b1e85-1d99-4804-b451-4302589116b8"],"본":["6b0b1e85-1d99-4804-b451-4302589116b8"],"따":["6b0b1e85-1d99-4804-b451-4302589116b8"],"었":["6b0b1e85-1d99-4804-b451-4302589116b8"],"글":["6b0b1e85-1d99-4804-b451-4302589116b8"],"벌":["6b0b1e85-1d99-4804-b451-4302589116b8"],"재":["6b0b1e85-1d99-4804-b451-4302589116b8"],"았":["6b0b1e85-1d99-4804-b451-4302589116b8"],"림":["6b0b1e85-1d99-4804-b451-4302589116b8"],"볼":["6b0b1e85-1d99-4804-b451-4302589116b8"],"단":["6b0b1e85-1d99-4804-b451-4302589116b8"],"계":["6b0b1e85-1d99-4804-b451-4302589116b8"],"걸":["6b0b1e85-1d99-4804-b451-4302589116b8"]},{"중":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"심":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"으":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"현":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"업":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"개":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"발":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"자":["921bb6d6-a242-4997-9718-7a6cb5e10d6d","6b0b1e85-1d99-4804-b451-4302589116b8"],"들":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"필":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"적":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"인":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"내":["921bb6d6-a242-4997-9718-7a6cb5e10d6d","6b0b1e85-1d99-4804-b451-4302589116b8"],"용":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"룰":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"예":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"정":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"많":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"은":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"성":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"원":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"줘":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"야":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"번":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"거":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"움":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"따":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"닝":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"포":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"초":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"점":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"맞":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"록":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"겠":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"준":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"항":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"능":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"먼":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"설":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"앱":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"글":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"뷰":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"며":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"제":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"뀔":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"잊":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"마":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"명":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"령":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"엔":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"뒤":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"붙":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"함":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"께":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"찾":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"냅":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"음":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"끝":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"났":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"순":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"모":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"큐":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"팅":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"젝":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"곧":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"줄":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"금":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"까":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"았":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"조":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"활":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"깃":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"쳐":["6b0b1e85-1d99-4804-b451-4302589116b8"],"당":["6b0b1e85-1d99-4804-b451-4302589116b8"],"히":["6b0b1e85-1d99-4804-b451-4302589116b8"],"맥":["6b0b1e85-1d99-4804-b451-4302589116b8"],"택":["6b0b1e85-1d99-4804-b451-4302589116b8"],"또":["6b0b1e85-1d99-4804-b451-4302589116b8"],"호":["6b0b1e85-1d99-4804-b451-4302589116b8"],"둔":["6b0b1e85-1d99-4804-b451-4302589116b8"],"즈":["6b0b1e85-1d99-4804-b451-4302589116b8"],"르":["6b0b1e85-1d99-4804-b451-4302589116b8"],"신":["6b0b1e85-1d99-4804-b451-4302589116b8"],"뿐":["6b0b1e85-1d99-4804-b451-4302589116b8"],"둘":["6b0b1e85-1d99-4804-b451-4302589116b8"],"얘":["6b0b1e85-1d99-4804-b451-4302589116b8"],"범":["6b0b1e85-1d99-4804-b451-4302589116b8"],"벗":["6b0b1e85-1d99-4804-b451-4302589116b8"],"킨":["6b0b1e85-1d99-4804-b451-4302589116b8"],"각":["6b0b1e85-1d99-4804-b451-4302589116b8"],"낸":["6b0b1e85-1d99-4804-b451-4302589116b8"],"눈":["6b0b1e85-1d99-4804-b451-4302589116b8"],"봐":["6b0b1e85-1d99-4804-b451-4302589116b8"],"처":["6b0b1e85-1d99-4804-b451-4302589116b8"],"즉":["6b0b1e85-1d99-4804-b451-4302589116b8"],"상":["6b0b1e85-1d99-4804-b451-4302589116b8"],"\ud83d":["6b0b1e85-1d99-4804-b451-4302589116b8"],"\ude09":["6b0b1e85-1d99-4804-b451-4302589116b8"],"역":["6b0b1e85-1d99-4804-b451-4302589116b8"],"및":["6b0b1e85-1d99-4804-b451-4302589116b8"],"간":["6b0b1e85-1d99-4804-b451-4302589116b8"],"깁":["6b0b1e85-1d99-4804-b451-4302589116b8"],"느":["6b0b1e85-1d99-4804-b451-4302589116b8"],"써":["6b0b1e85-1d99-4804-b451-4302589116b8"],"황":["6b0b1e85-1d99-4804-b451-4302589116b8"],"끔":["6b0b1e85-1d99-4804-b451-4302589116b8"],"좋":["6b0b1e85-1d99-4804-b451-4302589116b8"],"굉":["6b0b1e85-1d99-4804-b451-4302589116b8"],"장":["6b0b1e85-1d99-4804-b451-4302589116b8"]},{"부":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"탁":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"립":["921bb6d6-a242-4997-9718-7a6cb5e10d6d"],"헙":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"액":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"손":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"궁":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"관":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"심":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"➡":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"️":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"계":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"온":["3653362a-ef7d-41b2-8914-7e8295aaefd6"],"강":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"튜":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"채":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"널":["3653362a-ef7d-41b2-8914-7e8295aaefd6","6b0b1e85-1d99-4804-b451-4302589116b8"],"긴":["6b0b1e85-1d99-4804-b451-4302589116b8"],"듬":["6b0b1e85-1d99-4804-b451-4302589116b8"],"무":["6b0b1e85-1d99-4804-b451-4302589116b8"],"쪼":["6b0b1e85-1d99-4804-b451-4302589116b8"],"브":["6b0b1e85-1d99-4804-b451-4302589116b8"],"중":["6b0b1e85-1d99-4804-b451-4302589116b8"],"닉":["6b0b1e85-1d99-4804-b451-4302589116b8"],"함":["6b0b1e85-1d99-4804-b451-4302589116b8"],"낄":["6b0b1e85-1d99-4804-b451-4302589116b8"],"랍":["6b0b1e85-1d99-4804-b451-4302589116b8"],"클":["6b0b1e85-1d99-4804-b451-4302589116b8"],"료":["6b0b1e85-1d99-4804-b451-4302589116b8"],"발":["6b0b1e85-1d99-4804-b451-4302589116b8"],"유":["6b0b1e85-1d99-4804-b451-4302589116b8"]},{},{},{},{},{}],{},["@921bb6d6-a242-4997-9718-7a6cb5e10d6d","@3653362a-ef7d-41b2-8914-7e8295aaefd6","@6b0b1e85-1d99-4804-b451-4302589116b8"]],{"921bb6d6-a242-4997-9718-7a6cb5e10d6d":{"id":"921bb6d6-a242-4997-9718-7a6cb5e10d6d","index":"Blog","path":"/posts/2021/01/01/tech-blog-opening/","node":{"title":"Microsoft Korea 기술 블로그를 시작합니다","category":"Announcement","description":"2021년을 맞이해서 Microsoft Korea에서 새롭게 기술 블로그를 선보입니다","content":"\n안녕하세요!\n\n2021년 한국 마이크로소프트에서 새롭게 기술 블로그를 선보입니다. 마이크로소프트의 클라우드 서비스 삼대 축을 이루는 [Microsoft Azure][ms azure], [Microsoft 365][ms 365] 그리고 [Microsoft Power Platform][ms pwpf]을 중심으로 현업 개발자들이 필요로 하는 기술적인 내용들을 다룰 예정입니다.\n\n많은 성원 부탁드립니다!\n\n![Developer Advocate Bit][image-01]\n\n\n[image-01]: https://sa0blogs.blob.core.windows.net/msdevkr/2021/01/2021-01-01-tech-blog-opening-01.png\n\n[ms azure]: https://azure.microsoft.com/ko-kr/\n[ms 365]: https://www.microsoft.com/ko-kr/microsoft-365\n[ms pwpf]: https://powerplatform.microsoft.com/ko-kr/\n"},"title":"Microsoft Korea 기술 블로그를 시작합니다","content":"\n안녕하세요!\n\n2021년 한국 마이크로소프트에서 새롭게 기술 블로그를 선보입니다. 마이크로소프트의 클라우드 서비스 삼대 축을 이루는 [Microsoft Azure][ms azure], [Microsoft 365][ms 365] 그리고 [Microsoft Power Platform][ms pwpf]을 중심으로 현업 개발자들이 필요로 하는 기술적인 내용들을 다룰 예정입니다.\n\n많은 성원 부탁드립니다!\n\n![Developer Advocate Bit][image-01]\n\n\n[image-01]: https://sa0blogs.blob.core.windows.net/msdevkr/2021/01/2021-01-01-tech-blog-opening-01.png\n\n[ms azure]: https://azure.microsoft.com/ko-kr/\n[ms 365]: https://www.microsoft.com/ko-kr/microsoft-365\n[ms pwpf]: https://powerplatform.microsoft.com/ko-kr/\n"},"3653362a-ef7d-41b2-8914-7e8295aaefd6":{"id":"3653362a-ef7d-41b2-8914-7e8295aaefd6","index":"Blog","path":"/posts/2021/01/06/provisioning-eventgrid-subscription-and-logicapp-handler-using-azure-cli/","node":{"title":"애저 CLI를 이용해 애저 이벤트그리드 구독 및 로직앱 이벤트 핸들러 프로비저닝하기","category":"Azure","description":"애저 이벤트그리드 커스텀 토픽에 대한 애저 이벤트그리드 구독 리소스는 ARM 템플릿을 통해 프로비저닝 할 수 없습니다. 이 포스트는 애저 CLI를 이용해서 이 애저 이벤트그리드 구독과 로직앱 이벤트 핸들러를 별다른 외부 입력값 없이 자동으로 프로비저닝하는 방법에 대해 알아봅니다.","content":"\n[애저 이벤트그리드][az evtgrd]라는 서비스를 이용하면 다양한 형태의 이벤트 기반 아키텍처를 구성할 수 있습니다. 특히 다양한 형태로 기존에 존재하는 애플리케이션간 이벤트 메시지를 전송하는데 있어서 꽤 유용하게 쓰이지요.\n\n![애저 이벤트그리드][image-01]\n\n\n## 이벤트 기반 아키텍처의 세 요소 ##\n\n이벤트 기반 아키텍처를 구성할 때 중요한 역할을 하는 세 가지 요소는 아래와 같습니다.\n\n\n### 이벤트 생성자/퍼블리셔 ###\n\n이벤트 생성자/퍼블리셔는 이벤트가 발생하는 근원입니다. 이벤트만 발생시킬 수 있다면 무엇이든 이벤트 생성자가 될 수 있죠. 아래 그림은 지난 2018년 [오픈 인프라 데이즈][oid]에서 발표했던 [클라우드이벤트 CloudEvents][oid ce] 발표 내용의 일부를 캡쳐한 것인데요, 아래 그림에서는 라즈베리파이 장치에서 이벤트를 생성하는 것에 대해 묘사합니다.\n\n![이벤트 생성자 Event Publisher][image-02]\n\n\n### 이벤트 구독자/섭스크라이버/처리자/핸들러 ###\n\n이벤트 구독자와 처리자는 엄밀히 말하면 다른 것이긴 하지만, 보통은 구독하면서 동시에 해당 이벤트를 처리하기 때문에 같은 것드로 봐도 큰 무리는 없습니다. 아래 그림에서는 이벤트 생성자가 보낸 이벤트를 받아 시각화 처리를 하는 형태를 보여줍니다.\n\n![이벤트 구독자 Event Subscriber][image-03]\n\n\n### 이벤트 중개자/브로커 ###\n\n일반적으로 이 이벤트 생성자와 구독자 사이에서는 직접적인 연결을 하지 않고 비동기식으로 진행하는데, 이 때 필요한 것이 바로 [애저 이벤트그리드][az evtgrd]와 같은 이벤트 중개자입니다. 아래 그림은 바로 [애저 이벤트그리드][az evtgrd]가 이벤트 생성자와 구독자 사이에서 어떤 역할을 하는지 보여줍니다.\n\n![이벤트 중개자 Event Broker][image-04]\n\n> [클라우드이벤트][ce]에 대해 좀 더 알고 싶다면, [발표 영상][oid yt]과 [발표 자료][oid ss]를 확인해 보세요!\n\n\n## 애저 이벤트그리드 구독자 생성하기 ##\n\n일반적인 CI/CD 환경에서 애저 이벤트그리드 토픽을 생성할 때에는 [ARM 템플릿][az evtgrd arm topic]을 이용하면 쉽습니다. 하지만, 이벤트그리드 구독을 생성하는 [ARM 템플릿][az evtgrd arm sub]은 내가 생성한 이벤트그리드 토픽을 지정할 수 없기 때문에 여기서는 안타깝지만 사용할 수 없습니다. 대신, [애저 CLI][az cli]를 사용해서 내가 지정한 토픽에 대해 구독을 생성하면 됩니다.\n\n---\n\n***추가:***\n\n정확하게는 이벤트그리드 구독 리소스를 생성하면서 토픽을 지정할 수 있는 방법이 사실 두 가지가 있습니다.\n\n### 스코프 지정하기 (권장하는 방법) ###\n\n위에 언급한 이벤트그리드 구독용 [ARM 템플릿][az evtgrd arm sub]을 사용하기 위해서는 `scope` 속성값을 지정해 주면 됩니다 (line #7). ARM 템플릿을 [bicep][az bicep]으로 구현한 샘플 코드는 대략 아래와 같습니다.\n\nhttps://gist.github.com/justinyoo/8865213b31baeda9f7c1ad258351a039?file=06-az-eventgrid-event-subscription-create-1.bicep&highlights=7\n\n\n### 하위 리소스 타입 지정하기 (권장하지는 않지만 허용되는 방법) ###\n\n또는 아래와 같이 하위 리소스 타입으로 구현을 할 수도 있습니다. 이 떄는 `scope` 속성값이 필요하진 않지만, 리소스 타입과 이름을 좀 더 길게 정해줘야 하는 번거로움이 있습니다 (line #6-7).\n\nhttps://gist.github.com/justinyoo/8865213b31baeda9f7c1ad258351a039?file=07-az-eventgrid-event-subscription-create-2.bicep&highlights=6-7\n\n따라서, 위와 같은 방식으로 애저 이벤트그리드 구독 리소스를 프로비저닝해도 됩니다. 다만, 이 포스트는 애저 CLI에 초점을 맞추도록 하겠습니다.\n\n---\n\n\n## 애저 CLI 사전 준비사항 ##\n\n[애저 CLI][az cli]로 이벤트그리드 구독 리소스를 프로비저닝하기 위해서는 아래 [확장기능][az cli extensions]을 먼저 설치해야 합니다. 여기서 [Logic][az cli extensions logic]은 [애저 로직앱][az logapp]을 위한 것인데, 이 포스트에서는 이벤트 처리자로서 로직앱을 사용하기 때문입니다.\n\n* [EventGrid][az cli extensions eventgrid]\n* [Logic][az cli extensions logic]\n\n> 이 두 확장기능은 이 글을 쓰는 현재 프리뷰 기능이며 언제든 구현이 바뀔 수 있다는 점 잊지 마세요!\n\n\n## 애저 CLI 명령어 ##\n\n먼저 [애저 로직앱][az logapp]을 이벤트 처리자로 사용하기 위해서는 로직앱의 엔드포인트 URL을 알아내야 합니다. 로직앱은 특성상 엔드포인트 뒤에 항상 SAS 토큰이 붙어오기 때문에 이를 함께 알아내야 합니다. 먼저 엔드포인트를 찾고자 하는 로직앱의 리소스 ID를 아래와 같이 `az logic workflow show` 명령어를 통해 알아냅니다.\n\nhttps://gist.github.com/justinyoo/8865213b31baeda9f7c1ad258351a039?file=01-az-logic-workflow-show.sh\n\n그 다음에는 `az rest` 명령어를 통해 SAS 토큰이 붙어 있는 엔드포인트 값을 알아냅니다.\n\nhttps://gist.github.com/justinyoo/8865213b31baeda9f7c1ad258351a039?file=02-az-rest.sh\n\n이제 로직앱을 이벤트 처리자로 사용하기 위한 준비는 끝났습니다. 다음 순서는 이벤트그리드 토픽의 리소스 ID를 아래와 같이 `az eventgrid topic show` 명령어를 통해 알아냅니다.\n\nhttps://gist.github.com/justinyoo/8865213b31baeda9f7c1ad258351a039?file=03-az-eventgrid-topic-show.sh\n\n이벤트그리드 구독자를 생성하기 위한 모든 준비가 끝났습니다. 아래 `az eventgrid event-subscription create` 명령어를 통해 이벤트그리드 구독자를 생성합니다. 여기서는 [CNCF][cncf]의 인큐베이팅 프로젝트인 [CloudEvents 스키마][ce]를 사용하는 것으로 합니다.\n\nhttps://gist.github.com/justinyoo/8865213b31baeda9f7c1ad258351a039?file=04-az-eventgrid-event-subscription-create.sh\n\n위와 같은 방법으로 하면 곧바로 애저 이벤트그리드 구독자 리소스를 프로비저닝할 수 있습니다. 위 명령어를 한줄로 합치면 아래와 같습니다.\n\nhttps://gist.github.com/justinyoo/8865213b31baeda9f7c1ad258351a039?file=05-one-liner.sh\n\n---\n\n지금까지 이벤트그리드 구독자를 프로비저닝하고 로직앱을 그 처리자로 설정하기 위해 애저 CLI를 이용하는 방법에 대해 알아 보았습니다. 이를 조금 더 활용하면 [깃헙 액션][gh actions]과 같은 CI/CD 파이프라인에서도 손쉽게 통합시킬 수 있을 것입니다.\n\n\n## 더 궁금하다면... ##\n\n* 애저 클라우드에 관심이 있으신가요? ➡️ [무료 애저 계정 생성하기][az account free]\n* 애저 클라우드 무료 온라인 강의 코스를 들어 보세요! ➡️ [Microsoft Learn][ms learn]\n* 마이크로소프트 개발자 유튜브 채널 ➡️ [Microsoft Developer Korea][yt msdevkr]\n\n\n[image-01]: https://docs.microsoft.com/ko-kr/azure/event-grid/media/overview/functional-model.png?WT.mc_id=devops-12244-juyoo\n[image-02]: https://sa0blogs.blob.core.windows.net/aliencube/2021/01/provisioning-eventgrid-subscription-and-logicapp-handler-using-azure-cli-02.png\n[image-03]: https://sa0blogs.blob.core.windows.net/aliencube/2021/01/provisioning-eventgrid-subscription-and-logicapp-handler-using-azure-cli-03.png\n[image-04]: https://sa0blogs.blob.core.windows.net/aliencube/2021/01/provisioning-eventgrid-subscription-and-logicapp-handler-using-azure-cli-04.png\n\n[az account free]: https://azure.microsoft.com/ko-kr/free/?WT.mc_id=devops-12244-juyoo\n[ms learn]: https://docs.microsoft.com/ko-kr/learn/?WT.mc_id=devops-12244-juyoo\n[yt msdevkr]: https://www.youtube.com/channel/UCdgR-b2t7Byu_UGrHnu-T0g\n\n[az cli]: https://docs.microsoft.com/ko-kr/cli/azure/what-is-azure-cli?WT.mc_id=devops-12244-juyoo\n[az cli extensions]: https://docs.microsoft.com/ko-kr/cli/azure/azure-cli-extensions-list?WT.mc_id=devops-12244-juyoo\n[az cli extensions eventgrid]: https://github.com/Azure/azure-cli-extensions/tree/master/src/eventgrid\n[az cli extensions logic]: https://github.com/Azure/azure-cli-extensions/tree/master/src/logic\n\n[az bicep]: https://github.com/Azure/bicep\n\n[az logapp]: https://docs.microsoft.com/ko-kr/azure/logic-apps/logic-apps-overview?WT.mc_id=devops-12244-juyoo\n\n[az evtgrd]: https://docs.microsoft.com/ko-kr/azure/event-grid/overview?WT.mc_id=devops-12244-juyoo\n[az evtgrd arm topic]: https://docs.microsoft.com/ko-kr/azure/templates/microsoft.eventgrid/topics?WT.mc_id=devops-12244-juyoo\n[az evtgrd arm sub]: https://docs.microsoft.com/ko-kr/azure/templates/microsoft.eventgrid/eventsubscriptions?WT.mc_id=devops-12244-juyoo\n\n[oid]: https://event.openinfradays.kr/2018/about/\n[oid ce]: https://event.openinfradays.kr/2018/session1/track_4_0\n[oid yt]: https://youtu.be/h2_ZNTXwlVc\n[oid ss]: https://www.slideshare.net/openstack_kr/openinfra-days-korea-2018-track-4-cloudevents\n\n[cncf]: https://www.cncf.io/\n[ce]: https://cloudevents.io/\n\n[gh actions]: https://docs.github.com/en/free-pro-team@latest/actions\n"},"title":"애저 CLI를 이용해 애저 이벤트그리드 구독 및 로직앱 이벤트 핸들러 프로비저닝하기","content":"\n[애저 이벤트그리드][az evtgrd]라는 서비스를 이용하면 다양한 형태의 이벤트 기반 아키텍처를 구성할 수 있습니다. 특히 다양한 형태로 기존에 존재하는 애플리케이션간 이벤트 메시지를 전송하는데 있어서 꽤 유용하게 쓰이지요.\n\n![애저 이벤트그리드][image-01]\n\n\n## 이벤트 기반 아키텍처의 세 요소 ##\n\n이벤트 기반 아키텍처를 구성할 때 중요한 역할을 하는 세 가지 요소는 아래와 같습니다.\n\n\n### 이벤트 생성자/퍼블리셔 ###\n\n이벤트 생성자/퍼블리셔는 이벤트가 발생하는 근원입니다. 이벤트만 발생시킬 수 있다면 무엇이든 이벤트 생성자가 될 수 있죠. 아래 그림은 지난 2018년 [오픈 인프라 데이즈][oid]에서 발표했던 [클라우드이벤트 CloudEvents][oid ce] 발표 내용의 일부를 캡쳐한 것인데요, 아래 그림에서는 라즈베리파이 장치에서 이벤트를 생성하는 것에 대해 묘사합니다.\n\n![이벤트 생성자 Event Publisher][image-02]\n\n\n### 이벤트 구독자/섭스크라이버/처리자/핸들러 ###\n\n이벤트 구독자와 처리자는 엄밀히 말하면 다른 것이긴 하지만, 보통은 구독하면서 동시에 해당 이벤트를 처리하기 때문에 같은 것드로 봐도 큰 무리는 없습니다. 아래 그림에서는 이벤트 생성자가 보낸 이벤트를 받아 시각화 처리를 하는 형태를 보여줍니다.\n\n![이벤트 구독자 Event Subscriber][image-03]\n\n\n### 이벤트 중개자/브로커 ###\n\n일반적으로 이 이벤트 생성자와 구독자 사이에서는 직접적인 연결을 하지 않고 비동기식으로 진행하는데, 이 때 필요한 것이 바로 [애저 이벤트그리드][az evtgrd]와 같은 이벤트 중개자입니다. 아래 그림은 바로 [애저 이벤트그리드][az evtgrd]가 이벤트 생성자와 구독자 사이에서 어떤 역할을 하는지 보여줍니다.\n\n![이벤트 중개자 Event Broker][image-04]\n\n> [클라우드이벤트][ce]에 대해 좀 더 알고 싶다면, [발표 영상][oid yt]과 [발표 자료][oid ss]를 확인해 보세요!\n\n\n## 애저 이벤트그리드 구독자 생성하기 ##\n\n일반적인 CI/CD 환경에서 애저 이벤트그리드 토픽을 생성할 때에는 [ARM 템플릿][az evtgrd arm topic]을 이용하면 쉽습니다. 하지만, 이벤트그리드 구독을 생성하는 [ARM 템플릿][az evtgrd arm sub]은 내가 생성한 이벤트그리드 토픽을 지정할 수 없기 때문에 여기서는 안타깝지만 사용할 수 없습니다. 대신, [애저 CLI][az cli]를 사용해서 내가 지정한 토픽에 대해 구독을 생성하면 됩니다.\n\n---\n\n***추가:***\n\n정확하게는 이벤트그리드 구독 리소스를 생성하면서 토픽을 지정할 수 있는 방법이 사실 두 가지가 있습니다.\n\n### 스코프 지정하기 (권장하는 방법) ###\n\n위에 언급한 이벤트그리드 구독용 [ARM 템플릿][az evtgrd arm sub]을 사용하기 위해서는 `scope` 속성값을 지정해 주면 됩니다 (line #7). ARM 템플릿을 [bicep][az bicep]으로 구현한 샘플 코드는 대략 아래와 같습니다.\n\nhttps://gist.github.com/justinyoo/8865213b31baeda9f7c1ad258351a039?file=06-az-eventgrid-event-subscription-create-1.bicep&highlights=7\n\n\n### 하위 리소스 타입 지정하기 (권장하지는 않지만 허용되는 방법) ###\n\n또는 아래와 같이 하위 리소스 타입으로 구현을 할 수도 있습니다. 이 떄는 `scope` 속성값이 필요하진 않지만, 리소스 타입과 이름을 좀 더 길게 정해줘야 하는 번거로움이 있습니다 (line #6-7).\n\nhttps://gist.github.com/justinyoo/8865213b31baeda9f7c1ad258351a039?file=07-az-eventgrid-event-subscription-create-2.bicep&highlights=6-7\n\n따라서, 위와 같은 방식으로 애저 이벤트그리드 구독 리소스를 프로비저닝해도 됩니다. 다만, 이 포스트는 애저 CLI에 초점을 맞추도록 하겠습니다.\n\n---\n\n\n## 애저 CLI 사전 준비사항 ##\n\n[애저 CLI][az cli]로 이벤트그리드 구독 리소스를 프로비저닝하기 위해서는 아래 [확장기능][az cli extensions]을 먼저 설치해야 합니다. 여기서 [Logic][az cli extensions logic]은 [애저 로직앱][az logapp]을 위한 것인데, 이 포스트에서는 이벤트 처리자로서 로직앱을 사용하기 때문입니다.\n\n* [EventGrid][az cli extensions eventgrid]\n* [Logic][az cli extensions logic]\n\n> 이 두 확장기능은 이 글을 쓰는 현재 프리뷰 기능이며 언제든 구현이 바뀔 수 있다는 점 잊지 마세요!\n\n\n## 애저 CLI 명령어 ##\n\n먼저 [애저 로직앱][az logapp]을 이벤트 처리자로 사용하기 위해서는 로직앱의 엔드포인트 URL을 알아내야 합니다. 로직앱은 특성상 엔드포인트 뒤에 항상 SAS 토큰이 붙어오기 때문에 이를 함께 알아내야 합니다. 먼저 엔드포인트를 찾고자 하는 로직앱의 리소스 ID를 아래와 같이 `az logic workflow show` 명령어를 통해 알아냅니다.\n\nhttps://gist.github.com/justinyoo/8865213b31baeda9f7c1ad258351a039?file=01-az-logic-workflow-show.sh\n\n그 다음에는 `az rest` 명령어를 통해 SAS 토큰이 붙어 있는 엔드포인트 값을 알아냅니다.\n\nhttps://gist.github.com/justinyoo/8865213b31baeda9f7c1ad258351a039?file=02-az-rest.sh\n\n이제 로직앱을 이벤트 처리자로 사용하기 위한 준비는 끝났습니다. 다음 순서는 이벤트그리드 토픽의 리소스 ID를 아래와 같이 `az eventgrid topic show` 명령어를 통해 알아냅니다.\n\nhttps://gist.github.com/justinyoo/8865213b31baeda9f7c1ad258351a039?file=03-az-eventgrid-topic-show.sh\n\n이벤트그리드 구독자를 생성하기 위한 모든 준비가 끝났습니다. 아래 `az eventgrid event-subscription create` 명령어를 통해 이벤트그리드 구독자를 생성합니다. 여기서는 [CNCF][cncf]의 인큐베이팅 프로젝트인 [CloudEvents 스키마][ce]를 사용하는 것으로 합니다.\n\nhttps://gist.github.com/justinyoo/8865213b31baeda9f7c1ad258351a039?file=04-az-eventgrid-event-subscription-create.sh\n\n위와 같은 방법으로 하면 곧바로 애저 이벤트그리드 구독자 리소스를 프로비저닝할 수 있습니다. 위 명령어를 한줄로 합치면 아래와 같습니다.\n\nhttps://gist.github.com/justinyoo/8865213b31baeda9f7c1ad258351a039?file=05-one-liner.sh\n\n---\n\n지금까지 이벤트그리드 구독자를 프로비저닝하고 로직앱을 그 처리자로 설정하기 위해 애저 CLI를 이용하는 방법에 대해 알아 보았습니다. 이를 조금 더 활용하면 [깃헙 액션][gh actions]과 같은 CI/CD 파이프라인에서도 손쉽게 통합시킬 수 있을 것입니다.\n\n\n## 더 궁금하다면... ##\n\n* 애저 클라우드에 관심이 있으신가요? ➡️ [무료 애저 계정 생성하기][az account free]\n* 애저 클라우드 무료 온라인 강의 코스를 들어 보세요! ➡️ [Microsoft Learn][ms learn]\n* 마이크로소프트 개발자 유튜브 채널 ➡️ [Microsoft Developer Korea][yt msdevkr]\n\n\n[image-01]: https://docs.microsoft.com/ko-kr/azure/event-grid/media/overview/functional-model.png?WT.mc_id=devops-12244-juyoo\n[image-02]: https://sa0blogs.blob.core.windows.net/aliencube/2021/01/provisioning-eventgrid-subscription-and-logicapp-handler-using-azure-cli-02.png\n[image-03]: https://sa0blogs.blob.core.windows.net/aliencube/2021/01/provisioning-eventgrid-subscription-and-logicapp-handler-using-azure-cli-03.png\n[image-04]: https://sa0blogs.blob.core.windows.net/aliencube/2021/01/provisioning-eventgrid-subscription-and-logicapp-handler-using-azure-cli-04.png\n\n[az account free]: https://azure.microsoft.com/ko-kr/free/?WT.mc_id=devops-12244-juyoo\n[ms learn]: https://docs.microsoft.com/ko-kr/learn/?WT.mc_id=devops-12244-juyoo\n[yt msdevkr]: https://www.youtube.com/channel/UCdgR-b2t7Byu_UGrHnu-T0g\n\n[az cli]: https://docs.microsoft.com/ko-kr/cli/azure/what-is-azure-cli?WT.mc_id=devops-12244-juyoo\n[az cli extensions]: https://docs.microsoft.com/ko-kr/cli/azure/azure-cli-extensions-list?WT.mc_id=devops-12244-juyoo\n[az cli extensions eventgrid]: https://github.com/Azure/azure-cli-extensions/tree/master/src/eventgrid\n[az cli extensions logic]: https://github.com/Azure/azure-cli-extensions/tree/master/src/logic\n\n[az bicep]: https://github.com/Azure/bicep\n\n[az logapp]: https://docs.microsoft.com/ko-kr/azure/logic-apps/logic-apps-overview?WT.mc_id=devops-12244-juyoo\n\n[az evtgrd]: https://docs.microsoft.com/ko-kr/azure/event-grid/overview?WT.mc_id=devops-12244-juyoo\n[az evtgrd arm topic]: https://docs.microsoft.com/ko-kr/azure/templates/microsoft.eventgrid/topics?WT.mc_id=devops-12244-juyoo\n[az evtgrd arm sub]: https://docs.microsoft.com/ko-kr/azure/templates/microsoft.eventgrid/eventsubscriptions?WT.mc_id=devops-12244-juyoo\n\n[oid]: https://event.openinfradays.kr/2018/about/\n[oid ce]: https://event.openinfradays.kr/2018/session1/track_4_0\n[oid yt]: https://youtu.be/h2_ZNTXwlVc\n[oid ss]: https://www.slideshare.net/openstack_kr/openinfra-days-korea-2018-track-4-cloudevents\n\n[cncf]: https://www.cncf.io/\n[ce]: https://cloudevents.io/\n\n[gh actions]: https://docs.github.com/en/free-pro-team@latest/actions\n"},"6b0b1e85-1d99-4804-b451-4302589116b8":{"id":"6b0b1e85-1d99-4804-b451-4302589116b8","index":"Blog","path":"/posts/2021/01/12/6-ways-refactoring-azure-devops-pipelines/","node":{"title":"애저 DevOps 파이프라인을 리팩토링하는 6가지 방법","category":"Azure","description":"애저 DevOps 파이프라인 YAML 파일을 사용하다 보면 반복적인 작업이 많이 나옵니다. 이 반복적인 작업 부분을 템플릿 형태로 리팩토링할 수 있는 포인트가 최소 여섯 군데 정도인데, 이러한 리팩토링 테크닉에 대해 다뤄봅니다.","content":"\n\n[애저 DevOps][az devops]에서 [CI/CD 파이프라인][az devops pipelines]을 구성하다보면 보통 반복적인 작업들이 많습니다. 이게 [태스크 Tasks][az devops pipelines tasks] 수준일 수도 있고, [작업 Jobs][az devops pipelines jobs] 수준일 수도 있고, [스테이지 Stages][az devops pipelines stages] 수준일 수도 있는데, 코딩을 할 때는 반복적인 부분을 리팩토링 한다지만, 파이프라인에서 반복적인 부분을 리팩토링할 수는 없을까요? 물론 있습니다. 그것도 파이프라인을 리팩토링할 수 있는 포인트가 최소 여섯 군데 정도 있습니다. 이 포스트에서는 애저 파이프라인의 [YAML][az devops pipelines yaml] 형식 [템플릿][az devops pipelines templates]을 이용해서 반복적으로 나타나는 부분을 리팩토링하는 방법에 대해 알아보겠습니다.\n\n> 이 포스트에 쓰인 예제 파이프라인 코드를 [이 리포지토리](https://github.com/devkimchi/Azure-Pipelines-Template-Sample)에서 확인해 보세요!\n\n\n## 빌드 파이프라인 ##\n\n우선 일반적인 빌드 파이프라인을 한 번 만들어 보겠습니다. 아래는 그냥 빌드 `Stage`를 작성한 것입니다. `Stages/Stage` 아래 `Jobs/Job` 아래 `Steps/Task`가 들어가 있습니다. `Greeting` 이라는 변수값을 출력시키는 파이프라인입니다 (line #18, 25)\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=pipeline-build-without-template.yaml&highlights=18,25\n\n이 파이프라인을 실행시키면 아래와 같은 결과가 나옵니다. `Hello World`가 보이죠?\n\n![리팩토링 전 애저 빌드 파이프라인 실행 결과](https://sa0blogs.blob.core.windows.net/aliencube/2019/08/azure-devops-pipelines-refactoring-technics-01.png)\n\n이제 이 빌드 파이프라인을 리팩토링할 차례입니다. 리팩토링은 크게 세 곳에서 가능한데요, 하나는 `Steps` 수준, 다른 하나는 `Jobs` 수준, 그리고 마지막 하나는 `Stages` 수준입니다.\n\n\n## 빌드 파이프라인을 `Steps` 수준에서 리팩토링하기 ##\n\n예를 들어 node.js 기반의 애플리케이션을 하나 만든다고 가정해 보죠. 이 경우 보통 순서가\n\n1. node.js 런타임 설치하기\n2. npm 패키지 복원하기\n3. 애플리케이션 빌드하기\n4. 애플리케이션 테스트하기\n5. 아티팩트 생성하기\n\n정도가 될 것입니다. 이 때 마지막 5번 항목을 제외하고는 거의 대부분의 경우 같은 순서로, 그리고 저 1-4번 작업을 한 세트로 해서 진행을 하게 되죠. 그렇다면 이 1-4번 작업 흐름을 그냥 하나로 묶어서 템플릿 형태로 빼 놓을 수도 있지 않을까요? 이럴 때 바로 `Steps` 수준의 리팩토링을 진행하게 됩니다. 만약 다른 작업에서는 이후 추가 작업을 더 필요로 한다고 하면 템플릿을 돌리고 난 후 추가 태스크를 정의하면 되므로 별 문제는 없습니다.\n\n이제 위에 정의한 빌드 파이프라인의 `Steps` 부분을 별도의 템플릿으로 분리합니다. 그렇다면 원래 파이프라인과 템플릿은 아래와 같이 바뀔 것입니다. 원래 파이프라인(`pipeline.yaml`)의 `steps` 항목 아래에 `template` 라는 항목이 생기고 (line #21), `parameters`를 통해 템플릿으로 값을 전달하는 것이 보일 것입니다 (line #22-23).\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=pipeline-build-with-steps-template.yaml&highlights=21-23\n\n그리고 `Steps` 수준 리팩토링 결과 템플릿인 `template-steps-build.yaml`을 보면, 아래와 같이 `parameters`와 `steps`를 정의했습니다 (line #2, 5). 이 `parameters` 항목을 통해 부모 파이프라인과 템플릿 사이 값을 교환할 수 있게 해 줍니다.\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=template-steps-build.yaml&highlights=2,5\n\n이렇게 리팩토링을 한 후 파이프라인을 돌려보면 아래와 같은 결과 화면을 보게 됩니다. 부모 파이프라인에서 템플릿으로 넘겨준 파라미터 값이 잘 표현되는 것이 보이죠?\n\n![Steps 수준 리팩토링 후 애저 빌드 파이프라인 실행 결과](https://sa0blogs.blob.core.windows.net/aliencube/2019/08/azure-devops-pipelines-refactoring-technics-02.png)\n\n\n## 빌드 파이프라인을 `Jobs` 수준에서 리팩토링하기 ##\n\n이번에는 `Jobs` 수준에서 리팩토링을 한 번 해보겠습니다. 앞서 연습해 봤던 `Steps` 수준 리팩토링은 공통의 태스크들을 묶어주는 정도였다면, `Jobs` 수준의 리팩토링은 그보다 큰 덩어리를 다룹니다. 이 덩어리에는 [빌드 에이전트][az devops pipelines agents]의 종류까지 결정할 수 있고, 템플릿 안의 모든 태스크를 동일하게 가져갈 수 있습니다.\n\n> 물론 [조건 표현식][az devops pipelines conditions]과 같은 고급 기능을 사용하면 좀 더 다양한 시나리오에서 다양한 태스크들을 활용할 수 있습니다.\n\n아래와 같이 부모 파이프라인을 수정해 보죠 (line #13-16).\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=pipeline-build-with-jobs-template.yaml&highlights=13-16\n\n그리고 난 후, 아래와 같이 `template-jobs-build.yaml` 파일을 작성합니다. 파라미터로 `vmImage`와 `message`를 넘겨 템플릿에서 어떻게 사용하는지 살펴보죠 (line #2-4).\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=template-jobs-build.yaml&highlights=2-4\n\n`Jobs` 수준에서 사용하는 빌드 에이전트의 종류까지도 변수화시켜 사용할 수 있는 것이 보이나요? 부모 템플릿에서 에이전트를 `Windows Server 2016` 버전으로 설정했으므로 실제 이를 파이프라인으로 돌려보면 아래와 같은 결과가 나타납니다.\n\n![Jobs 수준 리팩토링후 애저 빌드 파이프라인 실행 결과](https://sa0blogs.blob.core.windows.net/aliencube/2019/08/azure-devops-pipelines-refactoring-technics-03.png)\n\n\n## 빌드 파이프라인을 `Stages` 수준에서 리팩토링하기 ##\n\n이번에는 `Stages` 수준에서 파이프라인 리팩토링을 시도해 보겠습니다. 하나의 스테이지에는 여러개의 `Job`을 동시에 돌리거나 순차적으로 돌릴 수 있습니다. `Job` 수준에서 돌아가는 공통의 작업들이 있다면 이를 `Job` 수준에서 묶어 리팩토링 할 수 있겠지만, 아예 공통의 `Job`들 까지 묶어서 하나의 `Stage`를 만들고 이를 별도의 템플릿으로 빼낼 수 있는데, 이것이 이 연습의 핵심입니다. 아래 부모 파이프라인 코드를 보세요. `stages` 아래에 곧바로 템플릿을 지정하고 변수를 보냅니다 (line #9-12).\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=pipeline-build-with-stages-template.yaml&highlights=9-12\n\n위에서 언급한 `template-stage-build.yaml` 파일은 아래와 같이 작성할 수 있습니다. 부모에서 받아온 파라미터를 통해 빌드 에이전트에 쓰일 OS와 다른 값들을 설정할 수 있는게 보이죠 (line #2-4)?\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=template-stages-build.yaml&highlights=2-4\n\n이렇게 해서 파이프라인을 실행해 본 결과는 대략 아래와 같습니다. 변수를 통해 전달한 값에 따라 빌드 에이전트가 `Ubuntu 16.04` 버전으로 설정이 되었고, 글로벌 변수 값을 별도로 재정의하지 않았으므로 아래 그림과 같이 `G'day, mate`라는 글로벌 변수 값을 볼 수 있습니다.\n\n![Stages 수준 리팩토링 후 애저 빌드 파이프라인 실행 결과](https://sa0blogs.blob.core.windows.net/aliencube/2019/08/azure-devops-pipelines-refactoring-technics-04.png)\n\n\n## 빌드 파이프라인을 다단계 템플릿으로 리팩토링하기 ##\n\n이렇게 `Steps` 수준, `Jobs` 수준, `Stages` 수준에서 모두 리팩토링을 해 봤습니다. 그렇다면 리팩토링의 결과물인 템플릿을 다단계로 걸쳐서 사용할 수는 없을까요? 물론 당연히 되죠. 아래와 같이 부모 파이프라인을 수정해 보겠습니다. 이번에는 맥OS를 에이전트로 선택해 볼까요 (line #9-12)?\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=pipeline-build-with-nested-stages-template.yaml&highlights=9-12\n\n`Stage` 수준에서 다단계 템플릿을 만들어서 붙여봤습니다. 이 템플릿 안에서 또다시 `Jobs` 수준의 다단계 템플릿을 호출합니다 (line #11-14).\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=template-stages-nested-build.yaml&highlights=11-14\n\n`Jobs` 수준의 다단계 템플릿은 대략 아래와 같습니다. 그리고, 이 안에서 또다시 앞서 만들어 둔 `Steps` 수준의 템플릿을 호출합니다 (line #17-19).\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=template-jobs-nested-build.yaml&highlights=17-19\n\n이렇게 다단계로 템플릿을 만들어 붙여놓은 후 파이프라인을 돌려보면 아래와 같습니다.\n\n![다단계 리팩토링 후 애저 빌드 파이프라인 실행 결과](https://sa0blogs.blob.core.windows.net/aliencube/2019/08/azure-devops-pipelines-refactoring-technics-05.png)\n\n아주 문제 없이 다단계 템플릿이 잘 돌아가는게 보이죠?\n\n지금까지 빌드 파이프라인을 리팩토링해 봤습니다. 이제 릴리즈 파이프라인으로 들어가 보겠습니다.\n\n\n## 릴리즈 파이프라인 ##\n\n릴리즈 파이프라인은 빌드 파이프라인과 크게 다르지 않습니다. 다만 `job` 대신 [`deployment job`][az devpos pipelines deploymentjobs]을 사용한다는 차이가 있을 뿐입니다. 이 둘의 차이에 대해 얘기하는 것은 이 포스트의 범위를 벗어나니 여기까지만 하기로 하고, 실제 릴리즈 파이프라인의 구성을 보겠습니다. 템플릿 리팩토링 없는 전형적인 릴리즈 스테이지는 아래와 같습니다.\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=pipeline-release-without-template.yaml&highlights=9\n\n위 코드를 보면 `Jobs` 수준에 `deployment`를 사용해서 작업 단위를 정의한 것을 볼 수 있죠 (line #9)? 이를 실행시킨 결과는 대략 아래와 같습니다.\n\n![리팩토링 전 애저 릴리즈 파이프라인 실행 결과](https://sa0blogs.blob.core.windows.net/aliencube/2019/08/azure-devops-pipelines-refactoring-technics-06.png)\n\n이제 이 릴리즈 파이프라인을 동일하게 세 곳, `Steps`, `Jobs`, `Stages` 수준에서 리팩토링을 할 수 있습니다. 각각의 리팩토링 방식은 크게 다르지 않으므로 아래 리팩토링 결과만을 적어놓도록 하겠습니다.\n\n\n## 릴리즈 파이프라인을 `Steps` 수준에서 리팩토링하기 ##\n\n우선 `Steps` 수준에서 릴리즈 템플릿을 만들어 보도록 하죠. 부모 템플릿은 아래와 같습니다 (line #24-26).\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=pipeline-release-with-steps-template.yaml&highlights=24-26\n\n그리고 템플릿으로 빼낸 `Steps`는 아래와 같습니다. 앞서 빌드 파이프라인에서 사용한 템플릿과 구조가 다르지 않죠 (line #2-3)?\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=template-steps-release.yaml&highlights=2-3\n\n그리고 그 결과를 보면 아래와 같습니다.\n\n![Steps 수준 리팩토링 후 애저 릴리즈 파이프라인 실행 결과](https://sa0blogs.blob.core.windows.net/aliencube/2019/08/azure-devops-pipelines-refactoring-technics-07.png)\n\n\n## 릴리즈 파이프라인을 `Jobs` 수준에서 리팩토링하기 ##\n\n이번에는 릴리즈 파이프라인을 `Jobs` 수준에서 리팩토링해 보겠습니다 (line #13-17).\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=pipeline-release-with-jobs-template.yaml&highlights=13-17\n\n그리고 리팩토링한 템플릿은 아래와 같습니다. 여기서 눈여겨 봐야 할 부분은 바로 [`environment`][az devops pipelines environments] 이름도 파라미터로 처리가 가능하다는 점입니다 (line #14). 즉, 거의 대부분의 설정을 부모 파이프라인에서 파라미터로 내려주면 템플릿에서 받아 처리가 가능합니다 (line #2-5).\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=template-jobs-release.yaml&highlights=2-5,14\n\n![Jobs 수준 리팩토링 후 애저 릴리즈 파이프라인 실행 결과](https://sa0blogs.blob.core.windows.net/aliencube/2019/08/azure-devops-pipelines-refactoring-technics-08.png)\n\n\n## 릴리즈 파이프라인을 `Stages` 수준에서 리팩토링하기 ##\n\n더 이상의 자세한 설명은 생략합니다 (line #5-9). 😉\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=pipeline-release-with-stages-template.yaml&highlights=5-9\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=tmplate-stages-release.yaml&highlights=2-5\n\n![Stages 수준 리팩토링 후 애저 릴리즈 파이프라인 실행 결과](https://sa0blogs.blob.core.windows.net/aliencube/2019/08/azure-devops-pipelines-refactoring-technics-09.png)\n\n\n## 릴리즈 파이프라인을 다단계 템플릿으로 리팩토링하기 ##\n\n릴리즈 파이프라인 역시 다단계 템플릿으로 구성이 가능합니다.\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=pipeline-release-with-nested-stages-template.yaml&highlights=5-9\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=template-stages-nested-release.yaml&highlights=2-5,12-16\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=template-jobs-nested-release.yaml&highlights=20-22\n\n![다단계 리팩토링 후 애저 릴리즈 파이프라인 실행 결과](https://sa0blogs.blob.core.windows.net/aliencube/2019/08/azure-devops-pipelines-refactoring-technics-10.png)\n\n---\n\n이렇게 빌드 및 릴리즈 파이프라인을 모든 [`Stages`][az devops pipelines stages], [`Jobs`][az devops pipelines jobs], [`Steps`][az devops pipelines tasks] 수준에서 [템플릿][az devops pipelines templates]을 이용해 리팩토링을 해 보았습니다. 파이프라인 작업을 하다 보면 분명히 리팩토링이 필요한 순간이 생깁니다. 그리고 어느 수준에서 템플릿을 만들어 써야 할 지는 전적으로 상황마다 다르다고 할 수 있습니다.\n\n다만 한 가지 고려해야 할 것은, 템플릿은 가급적이면 단순한 작업을 할 수 있게끔 만드는 것이 좋습니다. 템플릿 표현식을 보면 조건문도 있고 반복문도 있고 굉장히 고급 기능을 사용할 수 있긴 하지만, 우선은 단순하게 시작해서 템플릿을 다듬어 나가는 것이 좋을 것입니다. 아무쪼록 [애저 데브옵스 파이프라인][az devops pipelines]의 [다중 스테이지 파이프라인 기법][az devops pipelines multi-stage]을 통해 다양한 템플릿 활용 테크닉을 도입해 보고 그 강력함을 느낄 수 있기를 바랍니다.\n\n\n## 더 궁금하다면... ##\n\n* 애저 클라우드에 관심이 있으신가요? ➡️ [무료 애저 계정 생성하기][az account free]\n* 애저 DevOps에 관심이 있으신가요? ➡️ [무료 애저 DevOps 사용하기][az devops free]\n* 애저 클라우드 무료 온라인 강의 코스를 들어 보세요! ➡️ [Microsoft Learn][ms learn]\n* 마이크로소프트 개발자 유튜브 채널 ➡️ [Microsoft Developer Korea][yt msdevkr]\n\n\n[az account free]: https://azure.microsoft.com/ko-kr/free/?WT.mc_id=devops-12575-juyoo\n[az devops free]: https://azure.microsoft.com/ko-kr/services/devops/?WT.mc_id=devops-12575-juyoo\n[ms learn]: https://docs.microsoft.com/ko-kr/learn/?WT.mc_id=devops-12575-juyoo\n[yt msdevkr]: https://www.youtube.com/channel/UCdgR-b2t7Byu_UGrHnu-T0g\n\n[az devops]: https://docs.microsoft.com/ko-kr/azure/devops/user-guide/what-is-azure-devops?view=azure-devops&WT.mc_id=devops-12575-juyoo\n[az devops pipelines]: https://docs.microsoft.com/ko-kr/azure/devops/pipelines/get-started/what-is-azure-pipelines?view=azure-devops&WT.mc_id=devops-12575-juyoo\n[az devops pipelines tasks]: https://docs.microsoft.com/ko-kr/azure/devops/pipelines/process/tasks?view=azure-devops&tabs=yaml&WT.mc_id=devops-12575-juyoo\n[az devops pipelines jobs]: https://docs.microsoft.com/ko-kr/azure/devops/pipelines/process/phases?view=azure-devops&tabs=yaml&WT.mc_id=devops-12575-juyoo\n[az devpos pipelines deploymentjobs]: https://docs.microsoft.com/ko-kr/azure/devops/pipelines/process/deployment-jobs?view=azure-devops&WT.mc_id=devops-12575-juyoo\n[az devops pipelines stages]: https://docs.microsoft.com/ko-kr/azure/devops/pipelines/process/stages?view=azure-devops&tabs=yaml&WT.mc_id=devops-12575-juyoo\n[az devops pipelines yaml]: https://docs.microsoft.com/ko-kr/azure/devops/pipelines/yaml-schema?view=azure-devops&tabs=schema%2Cparameter-schema&WT.mc_id=devops-12575-juyoo\n[az devops pipelines templates]: https://docs.microsoft.com/ko-kr/azure/devops/pipelines/process/templates?view=azure-devops&WT.mc_id=devops-12575-juyoo\n[az devops pipelines conditions]: https://docs.microsoft.com/ko-kr/azure/devops/pipelines/process/conditions?view=azure-devops&tabs=yaml&WT.mc_id=devops-12575-juyoo\n[az devops pipelines agents]: https://docs.microsoft.com/ko-kr/azure/devops/pipelines/agents/agents?view=azure-devops&tabs=browser&WT.mc_id=devops-12575-juyoo\n[az devops pipelines multi-stage]: https://docs.microsoft.com/ko-kr/azure/devops/pipelines/get-started/multi-stage-pipelines-experience?view=azure-devops&WT.mc_id=devops-12575-juyoo\n[az devops pipelines environments]: https://docs.microsoft.com/ko-kr/azure/devops/pipelines/process/environments?view=azure-devops&WT.mc_id=devops-12575-juyoo\n"},"title":"애저 DevOps 파이프라인을 리팩토링하는 6가지 방법","content":"\n\n[애저 DevOps][az devops]에서 [CI/CD 파이프라인][az devops pipelines]을 구성하다보면 보통 반복적인 작업들이 많습니다. 이게 [태스크 Tasks][az devops pipelines tasks] 수준일 수도 있고, [작업 Jobs][az devops pipelines jobs] 수준일 수도 있고, [스테이지 Stages][az devops pipelines stages] 수준일 수도 있는데, 코딩을 할 때는 반복적인 부분을 리팩토링 한다지만, 파이프라인에서 반복적인 부분을 리팩토링할 수는 없을까요? 물론 있습니다. 그것도 파이프라인을 리팩토링할 수 있는 포인트가 최소 여섯 군데 정도 있습니다. 이 포스트에서는 애저 파이프라인의 [YAML][az devops pipelines yaml] 형식 [템플릿][az devops pipelines templates]을 이용해서 반복적으로 나타나는 부분을 리팩토링하는 방법에 대해 알아보겠습니다.\n\n> 이 포스트에 쓰인 예제 파이프라인 코드를 [이 리포지토리](https://github.com/devkimchi/Azure-Pipelines-Template-Sample)에서 확인해 보세요!\n\n\n## 빌드 파이프라인 ##\n\n우선 일반적인 빌드 파이프라인을 한 번 만들어 보겠습니다. 아래는 그냥 빌드 `Stage`를 작성한 것입니다. `Stages/Stage` 아래 `Jobs/Job` 아래 `Steps/Task`가 들어가 있습니다. `Greeting` 이라는 변수값을 출력시키는 파이프라인입니다 (line #18, 25)\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=pipeline-build-without-template.yaml&highlights=18,25\n\n이 파이프라인을 실행시키면 아래와 같은 결과가 나옵니다. `Hello World`가 보이죠?\n\n![리팩토링 전 애저 빌드 파이프라인 실행 결과](https://sa0blogs.blob.core.windows.net/aliencube/2019/08/azure-devops-pipelines-refactoring-technics-01.png)\n\n이제 이 빌드 파이프라인을 리팩토링할 차례입니다. 리팩토링은 크게 세 곳에서 가능한데요, 하나는 `Steps` 수준, 다른 하나는 `Jobs` 수준, 그리고 마지막 하나는 `Stages` 수준입니다.\n\n\n## 빌드 파이프라인을 `Steps` 수준에서 리팩토링하기 ##\n\n예를 들어 node.js 기반의 애플리케이션을 하나 만든다고 가정해 보죠. 이 경우 보통 순서가\n\n1. node.js 런타임 설치하기\n2. npm 패키지 복원하기\n3. 애플리케이션 빌드하기\n4. 애플리케이션 테스트하기\n5. 아티팩트 생성하기\n\n정도가 될 것입니다. 이 때 마지막 5번 항목을 제외하고는 거의 대부분의 경우 같은 순서로, 그리고 저 1-4번 작업을 한 세트로 해서 진행을 하게 되죠. 그렇다면 이 1-4번 작업 흐름을 그냥 하나로 묶어서 템플릿 형태로 빼 놓을 수도 있지 않을까요? 이럴 때 바로 `Steps` 수준의 리팩토링을 진행하게 됩니다. 만약 다른 작업에서는 이후 추가 작업을 더 필요로 한다고 하면 템플릿을 돌리고 난 후 추가 태스크를 정의하면 되므로 별 문제는 없습니다.\n\n이제 위에 정의한 빌드 파이프라인의 `Steps` 부분을 별도의 템플릿으로 분리합니다. 그렇다면 원래 파이프라인과 템플릿은 아래와 같이 바뀔 것입니다. 원래 파이프라인(`pipeline.yaml`)의 `steps` 항목 아래에 `template` 라는 항목이 생기고 (line #21), `parameters`를 통해 템플릿으로 값을 전달하는 것이 보일 것입니다 (line #22-23).\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=pipeline-build-with-steps-template.yaml&highlights=21-23\n\n그리고 `Steps` 수준 리팩토링 결과 템플릿인 `template-steps-build.yaml`을 보면, 아래와 같이 `parameters`와 `steps`를 정의했습니다 (line #2, 5). 이 `parameters` 항목을 통해 부모 파이프라인과 템플릿 사이 값을 교환할 수 있게 해 줍니다.\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=template-steps-build.yaml&highlights=2,5\n\n이렇게 리팩토링을 한 후 파이프라인을 돌려보면 아래와 같은 결과 화면을 보게 됩니다. 부모 파이프라인에서 템플릿으로 넘겨준 파라미터 값이 잘 표현되는 것이 보이죠?\n\n![Steps 수준 리팩토링 후 애저 빌드 파이프라인 실행 결과](https://sa0blogs.blob.core.windows.net/aliencube/2019/08/azure-devops-pipelines-refactoring-technics-02.png)\n\n\n## 빌드 파이프라인을 `Jobs` 수준에서 리팩토링하기 ##\n\n이번에는 `Jobs` 수준에서 리팩토링을 한 번 해보겠습니다. 앞서 연습해 봤던 `Steps` 수준 리팩토링은 공통의 태스크들을 묶어주는 정도였다면, `Jobs` 수준의 리팩토링은 그보다 큰 덩어리를 다룹니다. 이 덩어리에는 [빌드 에이전트][az devops pipelines agents]의 종류까지 결정할 수 있고, 템플릿 안의 모든 태스크를 동일하게 가져갈 수 있습니다.\n\n> 물론 [조건 표현식][az devops pipelines conditions]과 같은 고급 기능을 사용하면 좀 더 다양한 시나리오에서 다양한 태스크들을 활용할 수 있습니다.\n\n아래와 같이 부모 파이프라인을 수정해 보죠 (line #13-16).\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=pipeline-build-with-jobs-template.yaml&highlights=13-16\n\n그리고 난 후, 아래와 같이 `template-jobs-build.yaml` 파일을 작성합니다. 파라미터로 `vmImage`와 `message`를 넘겨 템플릿에서 어떻게 사용하는지 살펴보죠 (line #2-4).\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=template-jobs-build.yaml&highlights=2-4\n\n`Jobs` 수준에서 사용하는 빌드 에이전트의 종류까지도 변수화시켜 사용할 수 있는 것이 보이나요? 부모 템플릿에서 에이전트를 `Windows Server 2016` 버전으로 설정했으므로 실제 이를 파이프라인으로 돌려보면 아래와 같은 결과가 나타납니다.\n\n![Jobs 수준 리팩토링후 애저 빌드 파이프라인 실행 결과](https://sa0blogs.blob.core.windows.net/aliencube/2019/08/azure-devops-pipelines-refactoring-technics-03.png)\n\n\n## 빌드 파이프라인을 `Stages` 수준에서 리팩토링하기 ##\n\n이번에는 `Stages` 수준에서 파이프라인 리팩토링을 시도해 보겠습니다. 하나의 스테이지에는 여러개의 `Job`을 동시에 돌리거나 순차적으로 돌릴 수 있습니다. `Job` 수준에서 돌아가는 공통의 작업들이 있다면 이를 `Job` 수준에서 묶어 리팩토링 할 수 있겠지만, 아예 공통의 `Job`들 까지 묶어서 하나의 `Stage`를 만들고 이를 별도의 템플릿으로 빼낼 수 있는데, 이것이 이 연습의 핵심입니다. 아래 부모 파이프라인 코드를 보세요. `stages` 아래에 곧바로 템플릿을 지정하고 변수를 보냅니다 (line #9-12).\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=pipeline-build-with-stages-template.yaml&highlights=9-12\n\n위에서 언급한 `template-stage-build.yaml` 파일은 아래와 같이 작성할 수 있습니다. 부모에서 받아온 파라미터를 통해 빌드 에이전트에 쓰일 OS와 다른 값들을 설정할 수 있는게 보이죠 (line #2-4)?\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=template-stages-build.yaml&highlights=2-4\n\n이렇게 해서 파이프라인을 실행해 본 결과는 대략 아래와 같습니다. 변수를 통해 전달한 값에 따라 빌드 에이전트가 `Ubuntu 16.04` 버전으로 설정이 되었고, 글로벌 변수 값을 별도로 재정의하지 않았으므로 아래 그림과 같이 `G'day, mate`라는 글로벌 변수 값을 볼 수 있습니다.\n\n![Stages 수준 리팩토링 후 애저 빌드 파이프라인 실행 결과](https://sa0blogs.blob.core.windows.net/aliencube/2019/08/azure-devops-pipelines-refactoring-technics-04.png)\n\n\n## 빌드 파이프라인을 다단계 템플릿으로 리팩토링하기 ##\n\n이렇게 `Steps` 수준, `Jobs` 수준, `Stages` 수준에서 모두 리팩토링을 해 봤습니다. 그렇다면 리팩토링의 결과물인 템플릿을 다단계로 걸쳐서 사용할 수는 없을까요? 물론 당연히 되죠. 아래와 같이 부모 파이프라인을 수정해 보겠습니다. 이번에는 맥OS를 에이전트로 선택해 볼까요 (line #9-12)?\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=pipeline-build-with-nested-stages-template.yaml&highlights=9-12\n\n`Stage` 수준에서 다단계 템플릿을 만들어서 붙여봤습니다. 이 템플릿 안에서 또다시 `Jobs` 수준의 다단계 템플릿을 호출합니다 (line #11-14).\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=template-stages-nested-build.yaml&highlights=11-14\n\n`Jobs` 수준의 다단계 템플릿은 대략 아래와 같습니다. 그리고, 이 안에서 또다시 앞서 만들어 둔 `Steps` 수준의 템플릿을 호출합니다 (line #17-19).\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=template-jobs-nested-build.yaml&highlights=17-19\n\n이렇게 다단계로 템플릿을 만들어 붙여놓은 후 파이프라인을 돌려보면 아래와 같습니다.\n\n![다단계 리팩토링 후 애저 빌드 파이프라인 실행 결과](https://sa0blogs.blob.core.windows.net/aliencube/2019/08/azure-devops-pipelines-refactoring-technics-05.png)\n\n아주 문제 없이 다단계 템플릿이 잘 돌아가는게 보이죠?\n\n지금까지 빌드 파이프라인을 리팩토링해 봤습니다. 이제 릴리즈 파이프라인으로 들어가 보겠습니다.\n\n\n## 릴리즈 파이프라인 ##\n\n릴리즈 파이프라인은 빌드 파이프라인과 크게 다르지 않습니다. 다만 `job` 대신 [`deployment job`][az devpos pipelines deploymentjobs]을 사용한다는 차이가 있을 뿐입니다. 이 둘의 차이에 대해 얘기하는 것은 이 포스트의 범위를 벗어나니 여기까지만 하기로 하고, 실제 릴리즈 파이프라인의 구성을 보겠습니다. 템플릿 리팩토링 없는 전형적인 릴리즈 스테이지는 아래와 같습니다.\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=pipeline-release-without-template.yaml&highlights=9\n\n위 코드를 보면 `Jobs` 수준에 `deployment`를 사용해서 작업 단위를 정의한 것을 볼 수 있죠 (line #9)? 이를 실행시킨 결과는 대략 아래와 같습니다.\n\n![리팩토링 전 애저 릴리즈 파이프라인 실행 결과](https://sa0blogs.blob.core.windows.net/aliencube/2019/08/azure-devops-pipelines-refactoring-technics-06.png)\n\n이제 이 릴리즈 파이프라인을 동일하게 세 곳, `Steps`, `Jobs`, `Stages` 수준에서 리팩토링을 할 수 있습니다. 각각의 리팩토링 방식은 크게 다르지 않으므로 아래 리팩토링 결과만을 적어놓도록 하겠습니다.\n\n\n## 릴리즈 파이프라인을 `Steps` 수준에서 리팩토링하기 ##\n\n우선 `Steps` 수준에서 릴리즈 템플릿을 만들어 보도록 하죠. 부모 템플릿은 아래와 같습니다 (line #24-26).\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=pipeline-release-with-steps-template.yaml&highlights=24-26\n\n그리고 템플릿으로 빼낸 `Steps`는 아래와 같습니다. 앞서 빌드 파이프라인에서 사용한 템플릿과 구조가 다르지 않죠 (line #2-3)?\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=template-steps-release.yaml&highlights=2-3\n\n그리고 그 결과를 보면 아래와 같습니다.\n\n![Steps 수준 리팩토링 후 애저 릴리즈 파이프라인 실행 결과](https://sa0blogs.blob.core.windows.net/aliencube/2019/08/azure-devops-pipelines-refactoring-technics-07.png)\n\n\n## 릴리즈 파이프라인을 `Jobs` 수준에서 리팩토링하기 ##\n\n이번에는 릴리즈 파이프라인을 `Jobs` 수준에서 리팩토링해 보겠습니다 (line #13-17).\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=pipeline-release-with-jobs-template.yaml&highlights=13-17\n\n그리고 리팩토링한 템플릿은 아래와 같습니다. 여기서 눈여겨 봐야 할 부분은 바로 [`environment`][az devops pipelines environments] 이름도 파라미터로 처리가 가능하다는 점입니다 (line #14). 즉, 거의 대부분의 설정을 부모 파이프라인에서 파라미터로 내려주면 템플릿에서 받아 처리가 가능합니다 (line #2-5).\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=template-jobs-release.yaml&highlights=2-5,14\n\n![Jobs 수준 리팩토링 후 애저 릴리즈 파이프라인 실행 결과](https://sa0blogs.blob.core.windows.net/aliencube/2019/08/azure-devops-pipelines-refactoring-technics-08.png)\n\n\n## 릴리즈 파이프라인을 `Stages` 수준에서 리팩토링하기 ##\n\n더 이상의 자세한 설명은 생략합니다 (line #5-9). 😉\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=pipeline-release-with-stages-template.yaml&highlights=5-9\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=tmplate-stages-release.yaml&highlights=2-5\n\n![Stages 수준 리팩토링 후 애저 릴리즈 파이프라인 실행 결과](https://sa0blogs.blob.core.windows.net/aliencube/2019/08/azure-devops-pipelines-refactoring-technics-09.png)\n\n\n## 릴리즈 파이프라인을 다단계 템플릿으로 리팩토링하기 ##\n\n릴리즈 파이프라인 역시 다단계 템플릿으로 구성이 가능합니다.\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=pipeline-release-with-nested-stages-template.yaml&highlights=5-9\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=template-stages-nested-release.yaml&highlights=2-5,12-16\n\nhttps://gist.github.com/justinyoo/41e3c56debe1eaa0bb1d0ac062bb38b9?file=template-jobs-nested-release.yaml&highlights=20-22\n\n![다단계 리팩토링 후 애저 릴리즈 파이프라인 실행 결과](https://sa0blogs.blob.core.windows.net/aliencube/2019/08/azure-devops-pipelines-refactoring-technics-10.png)\n\n---\n\n이렇게 빌드 및 릴리즈 파이프라인을 모든 [`Stages`][az devops pipelines stages], [`Jobs`][az devops pipelines jobs], [`Steps`][az devops pipelines tasks] 수준에서 [템플릿][az devops pipelines templates]을 이용해 리팩토링을 해 보았습니다. 파이프라인 작업을 하다 보면 분명히 리팩토링이 필요한 순간이 생깁니다. 그리고 어느 수준에서 템플릿을 만들어 써야 할 지는 전적으로 상황마다 다르다고 할 수 있습니다.\n\n다만 한 가지 고려해야 할 것은, 템플릿은 가급적이면 단순한 작업을 할 수 있게끔 만드는 것이 좋습니다. 템플릿 표현식을 보면 조건문도 있고 반복문도 있고 굉장히 고급 기능을 사용할 수 있긴 하지만, 우선은 단순하게 시작해서 템플릿을 다듬어 나가는 것이 좋을 것입니다. 아무쪼록 [애저 데브옵스 파이프라인][az devops pipelines]의 [다중 스테이지 파이프라인 기법][az devops pipelines multi-stage]을 통해 다양한 템플릿 활용 테크닉을 도입해 보고 그 강력함을 느낄 수 있기를 바랍니다.\n\n\n## 더 궁금하다면... ##\n\n* 애저 클라우드에 관심이 있으신가요? ➡️ [무료 애저 계정 생성하기][az account free]\n* 애저 DevOps에 관심이 있으신가요? ➡️ [무료 애저 DevOps 사용하기][az devops free]\n* 애저 클라우드 무료 온라인 강의 코스를 들어 보세요! ➡️ [Microsoft Learn][ms learn]\n* 마이크로소프트 개발자 유튜브 채널 ➡️ [Microsoft Developer Korea][yt msdevkr]\n\n\n[az account free]: https://azure.microsoft.com/ko-kr/free/?WT.mc_id=devops-12575-juyoo\n[az devops free]: https://azure.microsoft.com/ko-kr/services/devops/?WT.mc_id=devops-12575-juyoo\n[ms learn]: https://docs.microsoft.com/ko-kr/learn/?WT.mc_id=devops-12575-juyoo\n[yt msdevkr]: https://www.youtube.com/channel/UCdgR-b2t7Byu_UGrHnu-T0g\n\n[az devops]: https://docs.microsoft.com/ko-kr/azure/devops/user-guide/what-is-azure-devops?view=azure-devops&WT.mc_id=devops-12575-juyoo\n[az devops pipelines]: https://docs.microsoft.com/ko-kr/azure/devops/pipelines/get-started/what-is-azure-pipelines?view=azure-devops&WT.mc_id=devops-12575-juyoo\n[az devops pipelines tasks]: https://docs.microsoft.com/ko-kr/azure/devops/pipelines/process/tasks?view=azure-devops&tabs=yaml&WT.mc_id=devops-12575-juyoo\n[az devops pipelines jobs]: https://docs.microsoft.com/ko-kr/azure/devops/pipelines/process/phases?view=azure-devops&tabs=yaml&WT.mc_id=devops-12575-juyoo\n[az devpos pipelines deploymentjobs]: https://docs.microsoft.com/ko-kr/azure/devops/pipelines/process/deployment-jobs?view=azure-devops&WT.mc_id=devops-12575-juyoo\n[az devops pipelines stages]: https://docs.microsoft.com/ko-kr/azure/devops/pipelines/process/stages?view=azure-devops&tabs=yaml&WT.mc_id=devops-12575-juyoo\n[az devops pipelines yaml]: https://docs.microsoft.com/ko-kr/azure/devops/pipelines/yaml-schema?view=azure-devops&tabs=schema%2Cparameter-schema&WT.mc_id=devops-12575-juyoo\n[az devops pipelines templates]: https://docs.microsoft.com/ko-kr/azure/devops/pipelines/process/templates?view=azure-devops&WT.mc_id=devops-12575-juyoo\n[az devops pipelines conditions]: https://docs.microsoft.com/ko-kr/azure/devops/pipelines/process/conditions?view=azure-devops&tabs=yaml&WT.mc_id=devops-12575-juyoo\n[az devops pipelines agents]: https://docs.microsoft.com/ko-kr/azure/devops/pipelines/agents/agents?view=azure-devops&tabs=browser&WT.mc_id=devops-12575-juyoo\n[az devops pipelines multi-stage]: https://docs.microsoft.com/ko-kr/azure/devops/pipelines/get-started/multi-stage-pipelines-experience?view=azure-devops&WT.mc_id=devops-12575-juyoo\n[az devops pipelines environments]: https://docs.microsoft.com/ko-kr/azure/devops/pipelines/process/environments?view=azure-devops&WT.mc_id=devops-12575-juyoo\n"}}]